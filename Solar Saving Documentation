# ☀️ Solar Savings Prediction Project

## 📌 Project Overview
This project analyzes **household electricity consumption** and predicts **solar savings** using **machine learning models**. The goal is to estimate the **break-even period** for solar investments and forecast long-term savings based on increasing electricity costs.

## 🛠️ Technologies Used
- **Python** (pandas, numpy, seaborn, matplotlib)
- **Machine Learning** (Random Forest Regressor, Linear Regression, Decision Tree, SVR)
- **Data Preprocessing** (Handling missing values, feature engineering, train-test split)
- **Jupyter Notebook** for process workflow and visualization

## 📂 Dataset Information
The dataset contains household electricity consumption data, including:
- **Power usage trends** over time
- **Solar energy contribution**
- **Electricity costs with and without solar panels**
- **Government subsidy amounts**
- **Energy sent back to the grid**
- **Weather impact on solar energy efficiency**
- **Solar installation cost and break-even period**

## 🚀 Key Features Implemented
- **Data Preprocessing**: Cleaning missing values, converting data types, and handling timestamps.
- **Exploratory Data Analysis (EDA)**: Visualizing power consumption trends and solar energy contribution.
- **Machine Learning Model Training**:
  - **Random Forest Regressor** (Best Performing Model)
  - **Linear Regression**
  - **Support Vector Regressor (SVR)**
  - **Decision Tree Regressor**
- **Hyperparameter Tuning**: Grid Search Optimization for Random Forest
- **Break-even Analysis**: Estimating how many years it takes for solar panels to pay off.
- **Future Savings Prediction**: Forecasting solar savings for upcoming years.

## 📊 Visualizations Included
- **Electricity Consumption Over Time** 📉
- **Cost Comparison with & Without Solar** 💰
- **Solar Contribution Pie Chart** ☀️
- **Hourly Power Consumption Heatmap** 🔥
- **Annual Savings vs Solar Setup Cost**
- **Break-even Period Distribution**

## 🔮 Prediction Example
```python
# Predict solar savings for 2035
year = 2035
print(f"Predicted Solar Savings for {year}: ₹{predict_savings(year)}")
```
✅ **Example Output**: **₹49,484.71 saved by 2035**

## 🔹 Model Performance Evaluation
| Model                         | MAE   | MSE        | RMSE  | R² Score |
|--------------------------------|-------|-----------|-------|---------|
| **Linear Regression**          | 0.00  | 0.00      | 0.00  | **1.0000** ✅ |
| **Random Forest Regressor**    | 62.95 | 9367.80   | 96.79 | 0.9986  |
| **Decision Tree Regressor**    | 130.98| 33994.66  | 184.38| 0.9950  |
| **Support Vector Regressor**   | 1813.06 | 5140887.72 | 2267.35 | 0.2396 ❌ |

## 📌 Conclusion
This project provides valuable insights into **solar panel investments** and helps homeowners make data-driven financial decisions. The **Random Forest Regressor** was the most effective model for predicting solar savings. Future enhancements could include:
- **Integrating real-world solar panel cost datasets**
- **Using deep learning for more accurate predictions**
- **Building a web-based solar savings calculator**

✅ **The project successfully demonstrates how solar energy adoption can result in long-term savings and sustainability!** 🚀



